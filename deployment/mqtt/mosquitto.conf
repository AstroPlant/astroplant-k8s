pid_file /var/run/mosquitto.pid

persistence false
#persistence_location /mosquitto/data

#log_dest file /mosquitto/log/mosquitto.log
log_dest stdout
#log_type all

sys_interval 60

#acl_file /etc/mosquitto/aclfile
#password_file /etc/mosquitto/pwfile

allow_anonymous false

auth_plugin /build/mosquitto-auth-plug/auth-plug.so
# The documentation at https://mosquitto.org/man/mosquitto-conf-5.html says:
# "If password_file, or acl_file are used in the config file alongsize auth_plugin,
# the plugin checks will run after the built in checks."
# However, this is not the case. Primarily for this reason, I am using the files backend.
# This backend is nice because it hashes password in the same way as the postgres backend.
#auth_opt_backends postgres
auth_opt_backends files,postgres
#auth_opt_host postgresql.astroplant.sda-projects.nl
#auth_opt_port 9999
auth_opt_host postgresql.default.svc.cluster.local
auth_opt_port 5432
auth_opt_dbname astroplant
auth_opt_user postgres
auth_opt_pass UhATjuoMPjg7Ug
auth_opt_userquery SELECT password_hash FROM kits WHERE serial = $1 LIMIT 1
# The admin/pipeline password is checked by the files backend.
# The superquery from the postgres backend grants access to all topics.
# We need to use the superquery because ALCs from the files backend do not work.
auth_opt_superquery SELECT COALESCE(COUNT(*), 0) WHERE 'admin' = $1::VARCHAR OR 'pipeline' = $1::VARCHAR
auth_opt_aclquery SELECT CONCAT('kit/', $1::VARCHAR, '/#') WHERE $2::VARCHAR IS NOT NULL
auth_opt_password_file /etc/mosquitto/pwfile
# ACLs from the files backend do not work!
# However, we still need to use an empty ACL file, otherwise all users will be treated as superusers.
auth_opt_acl_file /etc/mosquitto/aclfile
